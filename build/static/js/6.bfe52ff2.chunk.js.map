{"version":3,"sources":["GQL/querys.js","components/@vuexy/statisticsCard/StatisticsCard.js","../node_modules/reactstrap/es/CardImg.js","components/InfoPais/InfoPais.js","components/ListadoPaises/ListadoPaises.js","views/Paises/Paises.js"],"names":["GET_PAIS_HN","gql","GET_GLOBAL","GET_PAISES_MAS_MUERTE","GET_PAISES_MAS_CONTAGIOS","GET_ALL_PAISES","GET_PAIS","StatisticsCards","className","this","props","iconRight","hideChart","iconBg","icon","stat","statTitle","options","series","type","height","React","Component","propTypes","tag","tagPropType","top","PropTypes","bool","bottom","string","cssModule","object","CardImg","Tag","attributes","_objectWithoutPropertiesLoose","cardImgClassName","classes","mapToCssModules","classNames","createElement","_extends","defaultProps","InfoPais","_id","useQuery","variables","data","loading","error","Card","CardHeader","CardTitle","CardBody","Spinner","color","getPais","pais","src","bandera","toLowerCase","Row","Col","xl","lg","sm","StatisticsCard","size","casos","muertes","recuperados","casosHoy","muertesHoy","ListadoPaises","Query","useState","id","setId","getPaises","map","index","key","xs","width","onClick","Paises","md"],"mappings":"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","file":"static/js/6.bfe52ff2.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const GET_PAIS_HN = gql`\r\n  query {\r\n    getPais(filter: { pais: \"Honduras\" }) {\r\n      pais\r\n      casos\r\n      casosHoy\r\n      casosActivos\r\n      casosCriticos\r\n      recuperados\r\n      latitud\r\n      longitud\r\n      muertes\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_GLOBAL = gql`\r\n  query {\r\n    getGlobal {\r\n      casos\r\n      recuperados\r\n      muertes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAISES_MAS_MUERTE = gql`\r\n  query {\r\n    getPaises(sortby: { direction: DESC, field: \"muertesHoy\" }) {\r\n      _id\r\n      pais\r\n      casosHoy\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAISES_MAS_CONTAGIOS = gql`\r\n  query {\r\n    getPaises(sortby: { direction: DESC, field: \"casosHoy\" }) {\r\n      _id\r\n      pais\r\n      casosHoy\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_PAISES = gql`\r\n  query {\r\n    getPaises(sortby: { direction: DESC, field: \"casos\" }) {\r\n      _id\r\n      pais\r\n      casosHoy\r\n      muertesHoy\r\n      bandera\r\n      casos\r\n      muertes\r\n      recuperados\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAIS = gql`\r\n  query getPais($_id: ID!) {\r\n    getPais(filter: { _id: $_id }) {\r\n      pais\r\n      casos\r\n      casosHoy\r\n      casosActivos\r\n      casosCriticos\r\n      recuperados\r\n      latitud\r\n      longitud\r\n      muertes\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\"\nimport { Card, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\n\nclass StatisticsCards extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardBody\n          className={`${this.props.className ? this.props.className : \"stats-card-body\"} d-flex ${\n            !this.props.iconRight && !this.props.hideChart\n              ? \"flex-column align-items-start\"\n              : this.props.iconRight\n              ? \"justify-content-between flex-row-reverse align-items-center\"\n              : this.props.hideChart && !this.props.iconRight\n              ? \"justify-content-center flex-column text-center\"\n              : null\n          } ${!this.props.hideChart ? \"pb-0\" : \"pb-2\"} pt-2`}\n        >\n          <div className=\"icon-section\">\n            <div\n              className={`avatar avatar-stats p-50 m-0 ${\n                this.props.iconBg\n                  ? `bg-rgba-${this.props.iconBg}`\n                  : \"bg-rgba-primary\"\n              }`}\n            >\n              <div className=\"avatar-content\">{this.props.icon}</div>\n            </div>\n          </div>\n          <div className=\"title-section\">\n            <h2 className=\"text-bold-600 mt-1 mb-25\">{this.props.stat}</h2>\n            <p className=\"mb-0\">{this.props.statTitle}</p>\n          </div>\n        </CardBody>\n        {!this.props.hideChart && (\n          <Chart\n            options={this.props.options}\n            series={this.props.series}\n            type={this.props.type}\n            height={this.props.height ? this.props.height : 100}\n          />\n        )}\n      </Card>\n    )\n  }\n}\nexport default StatisticsCards\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  top: PropTypes.bool,\n  bottom: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'img'\n};\n\nvar CardImg = function CardImg(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      top = props.top,\n      bottom = props.bottom,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"top\", \"bottom\", \"tag\"]);\n\n  var cardImgClassName = 'card-img';\n\n  if (top) {\n    cardImgClassName = 'card-img-top';\n  }\n\n  if (bottom) {\n    cardImgClassName = 'card-img-bottom';\n  }\n\n  var classes = mapToCssModules(classNames(className, cardImgClassName), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardImg.propTypes = propTypes;\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import React, { useEffect } from \"react\";\r\nimport { GET_PAIS } from \"../../GQL/querys\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport { Meh, Smile, UserX, Activity, AlertCircle } from \"react-feather\";\r\nimport StatisticsCard from \"../../components/@vuexy/statisticsCard/StatisticsCard\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Spinner,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  CardImg\r\n} from \"reactstrap\";\r\n\r\nexport default function InfoPais(props) {\r\n  const { _id } = props;\r\n  const { data, loading, error } = useQuery(GET_PAIS, {\r\n    variables: { _id }\r\n  });\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Cargando...</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"primary\" />\r\n            <Spinner type=\"grow\" color=\"secondary\" />\r\n            <Spinner type=\"grow\" color=\"success\" />\r\n            <Spinner type=\"grow\" color=\"danger\" />\r\n            <Spinner type=\"grow\" color=\"warning\" />\r\n            <Spinner type=\"grow\" color=\"info\" />\r\n            <Spinner type=\"grow\" color=\"light\" />\r\n            <Spinner type=\"grow\" color=\"dark\" />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else if (data) {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>{data.getPais.pais}</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <CardImg\r\n              src={`https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/${data.getPais.bandera.toLowerCase()}.svg`}\r\n              height=\"50%\"\r\n            />\r\n            <Row>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"warning\"\r\n                  icon={<Meh className=\"warning\" size={22} />}\r\n                  stat={data.getPais.casos}\r\n                  statTitle=\"Confirmados\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"danger\"\r\n                  icon={<UserX className=\"danger\" size={22} />}\r\n                  stat={data.getPais.muertes}\r\n                  statTitle=\"Muertes\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"primary\"\r\n                  icon={<Smile className=\"primary\" size={22} />}\r\n                  stat={data.getPais.recuperados}\r\n                  statTitle=\"Recuperados\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"warning\"\r\n                  icon={<AlertCircle className=\"warning\" size={22} />}\r\n                  stat={data.getPais.casosHoy}\r\n                  statTitle=\"Casos Hoy\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"danger\"\r\n                  icon={<Activity className=\"danger\" size={22} />}\r\n                  stat={data.getPais.muertesHoy}\r\n                  statTitle=\"Muertes Hoy\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1>{_id}</h1>\r\n    </>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Spinner,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nimport InfoPais from \"../../components/InfoPais/InfoPais\";\r\n\r\nexport default function ListadoPaises(props) {\r\n  const { Query } = props;\r\n  const { data, loading, error } = useQuery(Query);\r\n  const [id, setId] = useState(\"5e6c173c302df71e2426a16c\");\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Cargando...</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"primary\" />\r\n            <Spinner type=\"grow\" color=\"secondary\" />\r\n            <Spinner type=\"grow\" color=\"success\" />\r\n            <Spinner type=\"grow\" color=\"danger\" />\r\n            <Spinner type=\"grow\" color=\"warning\" />\r\n            <Spinner type=\"grow\" color=\"info\" />\r\n            <Spinner type=\"grow\" color=\"light\" />\r\n            <Spinner type=\"grow\" color=\"dark\" />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else if (data) {\r\n    return (\r\n      <>\r\n        <Row>\r\n          <Col>\r\n            <Card>\r\n              <CardHeader>\r\n                <CardTitle>Paises</CardTitle>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <Row>\r\n                  {data.getPaises.map((pais, index) => (\r\n                    <Col key={index} lg=\"12\" sm=\"12\" xs=\"12\">\r\n                      <CardBody className=\"stats-card-body d-flex justify-content-between flex-row-reverse align-items-center pt-2\">\r\n                        <div className=\"icon-section\">\r\n                          <div className=\"avatar avatar-stats p-50 m-0 bg-rgba-primary\">\r\n                            <div className=\"avatar-content\">\r\n                              {pais.bandera != null && (\r\n                                <img\r\n                                  src={`https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/${pais.bandera.toLowerCase()}.svg`}\r\n                                  width=\"100%\"\r\n                                  height=\"100%\"\r\n                                  onClick={() => setId(pais._id)}\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"title-section\">\r\n                          <h2 className=\"text-bold-600 mt-1 mb-25\">\r\n                            {index + 1}\r\n                            {`. ${pais.pais}`}\r\n                          </h2>\r\n                          <p className=\"mb-0\">Casos: {pais.casos}</p>\r\n                        </div>\r\n                      </CardBody>\r\n                    </Col>\r\n                  ))}\r\n                </Row>\r\n              </CardBody>\r\n            </Card>\r\n          </Col>\r\n          <Col>\r\n            <InfoPais _id={id} />\r\n          </Col>\r\n        </Row>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { Row, Col } from \"reactstrap\";\r\nimport { GET_ALL_PAISES } from \"../../GQL/querys\";\r\nimport ListadoPaises from \"../../components/ListadoPaises/ListadoPaises\";\r\n\r\nexport default function Paises() {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col lg=\"12\" xs=\"12\" sm=\"12\" md=\"12\">\r\n          <ListadoPaises Query={GET_ALL_PAISES} />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n"],"sourceRoot":""}