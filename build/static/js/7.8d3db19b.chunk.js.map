{"version":3,"sources":["GQL/querys.js","components/@vuexy/statisticsCard/StatisticsCard.js","components/Pais/Pais.js","components/Global/Global.js","components/MasMuertes/MasMuertes.js","components/MasContagios/MasContagios.js","views/pages/Home.js"],"names":["GET_PAIS_HN","gql","GET_GLOBAL","GET_PAISES_MAS_MUERTE","GET_PAISES_MAS_CONTAGIOS","GET_ALL_PAISES","GET_PAIS","StatisticsCards","className","this","props","iconRight","hideChart","iconBg","icon","stat","statTitle","options","series","type","height","React","Component","Pais","Query","useQuery","data","loading","error","Card","CardHeader","CardTitle","CardBody","Spinner","color","getPais","pais","Row","Col","xl","lg","sm","StatisticsCard","size","casos","muertes","recuperados","Global","console","log","getGlobal","MasMuertes","dataNueva","getPaises","filter","index","map","key","xs","src","bandera","toLowerCase","width","muertesHoy","MasContagios","casosHoy","Home","md"],"mappings":"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","file":"static/js/7.8d3db19b.chunk.js","sourcesContent":["import gql from \"graphql-tag\";\r\n\r\nexport const GET_PAIS_HN = gql`\r\n  query {\r\n    getPais(filter: { pais: \"Honduras\" }) {\r\n      pais\r\n      casos\r\n      casosHoy\r\n      casosActivos\r\n      casosCriticos\r\n      recuperados\r\n      latitud\r\n      longitud\r\n      muertes\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_GLOBAL = gql`\r\n  query {\r\n    getGlobal {\r\n      casos\r\n      recuperados\r\n      muertes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAISES_MAS_MUERTE = gql`\r\n  query {\r\n    getPaises(sortby: { direction: DESC, field: \"muertesHoy\" }) {\r\n      _id\r\n      pais\r\n      casosHoy\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAISES_MAS_CONTAGIOS = gql`\r\n  query {\r\n    getPaises(sortby: { direction: DESC, field: \"casosHoy\" }) {\r\n      _id\r\n      pais\r\n      casosHoy\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_ALL_PAISES = gql`\r\n  query {\r\n    getPaises(sortby: { direction: DESC, field: \"casos\" }) {\r\n      _id\r\n      pais\r\n      casosHoy\r\n      muertesHoy\r\n      bandera\r\n      casos\r\n      muertes\r\n      recuperados\r\n    }\r\n  }\r\n`;\r\n\r\nexport const GET_PAIS = gql`\r\n  query getPais($_id: ID!) {\r\n    getPais(filter: { _id: $_id }) {\r\n      pais\r\n      casos\r\n      casosHoy\r\n      casosActivos\r\n      casosCriticos\r\n      recuperados\r\n      latitud\r\n      longitud\r\n      muertes\r\n      muertesHoy\r\n      bandera\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\"\nimport { Card, CardBody } from \"reactstrap\"\nimport Chart from \"react-apexcharts\"\n\nclass StatisticsCards extends React.Component {\n  render() {\n    return (\n      <Card>\n        <CardBody\n          className={`${this.props.className ? this.props.className : \"stats-card-body\"} d-flex ${\n            !this.props.iconRight && !this.props.hideChart\n              ? \"flex-column align-items-start\"\n              : this.props.iconRight\n              ? \"justify-content-between flex-row-reverse align-items-center\"\n              : this.props.hideChart && !this.props.iconRight\n              ? \"justify-content-center flex-column text-center\"\n              : null\n          } ${!this.props.hideChart ? \"pb-0\" : \"pb-2\"} pt-2`}\n        >\n          <div className=\"icon-section\">\n            <div\n              className={`avatar avatar-stats p-50 m-0 ${\n                this.props.iconBg\n                  ? `bg-rgba-${this.props.iconBg}`\n                  : \"bg-rgba-primary\"\n              }`}\n            >\n              <div className=\"avatar-content\">{this.props.icon}</div>\n            </div>\n          </div>\n          <div className=\"title-section\">\n            <h2 className=\"text-bold-600 mt-1 mb-25\">{this.props.stat}</h2>\n            <p className=\"mb-0\">{this.props.statTitle}</p>\n          </div>\n        </CardBody>\n        {!this.props.hideChart && (\n          <Chart\n            options={this.props.options}\n            series={this.props.series}\n            type={this.props.type}\n            height={this.props.height ? this.props.height : 100}\n          />\n        )}\n      </Card>\n    )\n  }\n}\nexport default StatisticsCards\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Spinner,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport StatisticsCard from \"../../components/@vuexy/statisticsCard/StatisticsCard\";\r\nimport { Meh, Smile, UserX } from \"react-feather\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\nexport default function Pais(props) {\r\n  const { Query } = props;\r\n  const { data, loading, error } = useQuery(Query);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Cargando...</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"primary\" />\r\n            <Spinner type=\"grow\" color=\"secondary\" />\r\n            <Spinner type=\"grow\" color=\"success\" />\r\n            <Spinner type=\"grow\" color=\"danger\" />\r\n            <Spinner type=\"grow\" color=\"warning\" />\r\n            <Spinner type=\"grow\" color=\"info\" />\r\n            <Spinner type=\"grow\" color=\"light\" />\r\n            <Spinner type=\"grow\" color=\"dark\" />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else if (data) {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>{data.getPais.pais}</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"warning\"\r\n                  icon={<Meh className=\"warning\" size={22} />}\r\n                  stat={data.getPais.casos}\r\n                  statTitle=\"Confirmados\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"danger\"\r\n                  icon={<UserX className=\"danger\" size={22} />}\r\n                  stat={data.getPais.muertes}\r\n                  statTitle=\"Muertes\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"primary\"\r\n                  icon={<Smile className=\"primary\" size={22} />}\r\n                  stat={data.getPais.recuperados}\r\n                  statTitle=\"Recuperados\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Spinner,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport StatisticsCard from \"../../components/@vuexy/statisticsCard/StatisticsCard\";\r\nimport { Meh, Smile, UserX } from \"react-feather\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport default function Global(props) {\r\n  const { Query } = props;\r\n  const { data, loading, error } = useQuery(Query);\r\n  console.log(data);\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Cargando...</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"primary\" />\r\n            <Spinner type=\"grow\" color=\"secondary\" />\r\n            <Spinner type=\"grow\" color=\"success\" />\r\n            <Spinner type=\"grow\" color=\"danger\" />\r\n            <Spinner type=\"grow\" color=\"warning\" />\r\n            <Spinner type=\"grow\" color=\"info\" />\r\n            <Spinner type=\"grow\" color=\"light\" />\r\n            <Spinner type=\"grow\" color=\"dark\" />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else if (data) {\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Global</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"warning\"\r\n                  icon={<Meh className=\"warning\" size={22} />}\r\n                  stat={data.getGlobal.casos}\r\n                  statTitle=\"Confirmados\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"danger\"\r\n                  icon={<UserX className=\"danger\" size={22} />}\r\n                  stat={data.getGlobal.muertes}\r\n                  statTitle=\"Muertes\"\r\n                />\r\n              </Col>\r\n              <Col xl=\"4\" lg=\"4\" sm=\"6\">\r\n                <StatisticsCard\r\n                  hideChart\r\n                  iconBg=\"primary\"\r\n                  icon={<Smile className=\"primary\" size={22} />}\r\n                  stat={data.getGlobal.recuperados}\r\n                  statTitle=\"Recuperados\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Spinner,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Button\r\n} from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport default function MasMuertes(props) {\r\n  const { Query } = props;\r\n  const { data, loading, error } = useQuery(Query);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Cargando...</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"primary\" />\r\n            <Spinner type=\"grow\" color=\"secondary\" />\r\n            <Spinner type=\"grow\" color=\"success\" />\r\n            <Spinner type=\"grow\" color=\"danger\" />\r\n            <Spinner type=\"grow\" color=\"warning\" />\r\n            <Spinner type=\"grow\" color=\"info\" />\r\n            <Spinner type=\"grow\" color=\"light\" />\r\n            <Spinner type=\"grow\" color=\"dark\" />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else if (data) {\r\n    const dataNueva = data.getPaises.filter((pais, index) => {\r\n      return index <= 9;\r\n    });\r\n    console.log(dataNueva);\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Paises con mas Muertes Hoy</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              {dataNueva.map((pais, index) => (\r\n                <Col key={index} lg=\"12\" sm=\"12\" xs=\"12\">\r\n                  <CardBody className=\"stats-card-body d-flex justify-content-between flex-row-reverse align-items-center pt-2\">\r\n                    <div className=\"icon-section\">\r\n                      <div className=\"avatar avatar-stats p-50 m-0 bg-rgba-primary\">\r\n                        <div className=\"avatar-content\">\r\n                          <img\r\n                            src={`https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/${pais.bandera.toLowerCase()}.svg`}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"title-section\">\r\n                      <h2 className=\"text-bold-600 mt-1 mb-25\">{pais.pais}</h2>\r\n                      <p className=\"mb-0\">Muertes: {pais.muertesHoy}</p>\r\n                    </div>\r\n                  </CardBody>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  Spinner,\r\n  CardTitle,\r\n  CardBody,\r\n  Row,\r\n  Col\r\n} from \"reactstrap\";\r\nimport { useQuery } from \"@apollo/react-hooks\";\r\n\r\nexport default function MasContagios(props) {\r\n  const { Query } = props;\r\n  const { data, loading, error } = useQuery(Query);\r\n  if (loading) {\r\n    return (\r\n      <Card>\r\n        <CardHeader>\r\n          <CardTitle>Cargando...</CardTitle>\r\n        </CardHeader>\r\n        <CardBody>\r\n          <div className=\"text-center\">\r\n            <Spinner type=\"grow\" color=\"primary\" />\r\n            <Spinner type=\"grow\" color=\"secondary\" />\r\n            <Spinner type=\"grow\" color=\"success\" />\r\n            <Spinner type=\"grow\" color=\"danger\" />\r\n            <Spinner type=\"grow\" color=\"warning\" />\r\n            <Spinner type=\"grow\" color=\"info\" />\r\n            <Spinner type=\"grow\" color=\"light\" />\r\n            <Spinner type=\"grow\" color=\"dark\" />\r\n          </div>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else if (data) {\r\n    const dataNueva = data.getPaises.filter((pais, index) => {\r\n      return index <= 9;\r\n    });\r\n    return (\r\n      <>\r\n        <Card>\r\n          <CardHeader>\r\n            <CardTitle>Paises con mas Contagios Hoy</CardTitle>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              {dataNueva.map((pais, index) => (\r\n                <Col key={index} lg=\"12\" sm=\"12\" xs=\"12\">\r\n                  <CardBody className=\"stats-card-body d-flex justify-content-between flex-row-reverse align-items-center pt-2\">\r\n                    <div className=\"icon-section\">\r\n                      <div className=\"avatar avatar-stats p-50 m-0 bg-rgba-primary\">\r\n                        <div className=\"avatar-content\">\r\n                          <img\r\n                            src={`https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.4.3/flags/4x3/${pais.bandera.toLowerCase()}.svg`}\r\n                            width=\"100%\"\r\n                            height=\"100%\"\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"title-section\">\r\n                      <h2 className=\"text-bold-600 mt-1 mb-25\">{pais.pais}</h2>\r\n                      <p className=\"mb-0\">Contagios: {pais.casosHoy}</p>\r\n                    </div>\r\n                  </CardBody>\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport {\n  GET_PAIS_HN,\n  GET_GLOBAL,\n  GET_PAISES_MAS_MUERTE,\n  GET_PAISES_MAS_CONTAGIOS\n} from \"../../GQL/querys\";\nimport { Row, Col } from \"reactstrap\";\nimport Pais from \"../../components/Pais/Pais\";\nimport Global from \"../../components/Global/Global\";\nimport MasMuertes from \"../../components/MasMuertes/MasMuertes\";\nimport MasContagios from \"../../components/MasContagios/MasContagios\";\n\nexport default function Home() {\n  return (\n    <>\n      <Row>\n        <Col lg=\"6\" xs=\"12\" sm=\"12\" md=\"6\">\n          <Pais Query={GET_PAIS_HN} />\n        </Col>\n        <Col lg=\"6\" xs=\"12\" sm=\"12\" md=\"6\">\n          <Global Query={GET_GLOBAL} />\n        </Col>\n        <Col lg=\"6\" xs=\"12\" sm=\"12\" md=\"6\">\n          <MasMuertes Query={GET_PAISES_MAS_MUERTE} />\n        </Col>\n        <Col lg=\"6\" xs=\"12\" sm=\"12\" md=\"6\">\n          <MasContagios Query={GET_PAISES_MAS_CONTAGIOS} />\n        </Col>\n      </Row>\n    </>\n  );\n}\n"],"sourceRoot":""}